BitChannel の文法を説明します。

BitChannel の文法は RD がベースです。
また他の Wiki に慣れているユーザを考慮して Wiki 互換文法も取り入れました。

このページでは基本的な文法だけを紹介するので、
細かい点については BitChannelSyntaxDetail を参照してください。

== キャプション

行の先頭に「=」を書くとキャプションが付きます。
イコール二つで大見出し、
三つで小見出しです。
「イコール一つ」はありません。

記述例
{{{
== 大見出しです
=== 小さい見出しです
}}}

結果
== 大見出しです
=== 小さい見出しです

なおキャプション中では一切リンクは作れません。

== 段落

空行が段落区切りです。

== リンク (1) WikiName

「WikiName」のように、大文字で始まる単語を二つ以上つなげたものを
WikiName と言います。WikiName は自動的に同名のページへのリンクになります。

リンク先のページがまだ存在しないときは「?」が付きます。
例えば NotExistPage のように。

新しいページを作りたいときはまずそのページの WikiName を書き、
次にそのリンクをたどって編集する、というのが定石です。
「新しいページを作る」という命令はありません。

== リンク (2) BracketName

基本的にリンクには WikiName を使うのですが、
どうしても WikiName でない単語をリンクにしたい場合もありえます。
そういうときは明示的に「この単語をリンクにしろ」と指定することができます。
こちらの方法では、二重の角括弧 [[ …… ]] で単語を囲みます。
たとえば
{{{
[[tDiary]]
}}}
のように。

結果： [[tDiary]]

他の Wiki ではこの BlacketName を使うとどんな単語でも
リンクにできることが多いのですが、
BitChannel では [a-zA-Z0-9] 以外の文字は使えません。
それ以外の文字が入っているとリンクにならず、そのまま表示されます。

== リンク (3) URL

URLっぽい文字列 (例えば http://i.loveruby.net) は
自動的にその URL へのリンクになります。

そのとき、URL の拡張子部分が画像の拡張子と考えられる場合は、
<img> にしてその場に展開します。この機能を抑止したいときは
[[]] で囲ってください。

== 箇条書き

「*」で始まる行は箇条書きです。

記述例
{{{
* これが最初の項目。
* これは次の項目。
}}}

結果

  * これが最初の項目。
  * これは次の項目。

== 番号付き箇条書き

「(数字)」で始まる行は番号付き箇条書きです。
例えば「(1)」「(2)」「(3)」などを書きます。
ただし番号は意味を持ちません。
書いた順番に表示されます。

記述例
{{{
(0) これは最初の項目
(3) これは二番目の項目
(1) これは三番目の項目
}}}

結果
  (0) これは最初の項目
  (3) これは二番目の項目
  (1) これは三番目の項目

== 整形済テキスト

プログラムのソースコードなど、
改行なども含めて全くそのまま表示したいときは
「{{{」と「}}}」だけの行ではさみます。

記述例
{{{
  {{{
  # very useful class
  class C
    def initialize
      ....
    end
  end
  }}}
}}}

結果
{{{
# very useful class
class C
  def initialize
    ....
  end
end
}}}

「{{{」と「}}}」は必ず行頭から、
またその行にはそれだけを書きます。
